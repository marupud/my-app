{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\saite\\\\Downloads\\\\my-app\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport './App.css';\nimport { GET_FILMS, GET_PEOPLE_LIST } from './actions';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst App = ({\n  loading,\n  list,\n  films,\n  getTotalPeopleList,\n  getFilms\n}) => {\n  _s();\n\n  console.log(list, '7::', films);\n  const [filterText, setFilterText] = useState('');\n  const [filmsList, setFilmsList] = useState(null);\n  const [selectedFilm, setSelectedFilm] = useState(null);\n  const filteredList = list.filter(item => ~item.name.toLowerCase().indexOf(filterText.toLowerCase()));\n  useEffect(() => {\n    getTotalPeopleList();\n    getFilms();\n  }, []);\n\n  const handleChange = val => {\n    console.log(val, 'change====');\n    const unique = filteredList.filter(item => item.name == val.target.value);\n    const filmsData = films.filter(value => unique[0].films.find(ele => ele == value.url));\n    setFilmsList(filmsData);\n  };\n\n  const onFilmSelect = e => {\n    const selectedFilms = films.filter(ele => ele.title === e.target.value);\n    setSelectedFilm(selectedFilms);\n    console.log(e.target.value, '24::', selectedFilm);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [filteredList.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"demo-simple-select-label\",\n        id: \"demo-simple-select\",\n        value: '',\n        onChange: handleChange,\n        children: filteredList.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: item.value,\n          children: [\" \", item.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), filmsList && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: onFilmSelect,\n        children: filmsList.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item.title,\n          children: item.title\n        }, item.title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: selectedFilm && selectedFilm.map(val => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [val.title, \" - \", val.release_date.split('-')[0]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"gldnhKq52eERmgFLTQqKWm3M5WU=\");\n\n_c = App;\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    loading: state.loading,\n    list: state.list,\n    films: state.films\n  };\n};\n\nconst mapDispatchToProps = {\n  getTotalPeopleList: GET_PEOPLE_LIST,\n  getFilms: GET_FILMS\n};\nexport { App };\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/saite/Downloads/my-app/my-app/src/App.js"],"names":["React","useEffect","useState","connect","GET_FILMS","GET_PEOPLE_LIST","Select","MenuItem","App","loading","list","films","getTotalPeopleList","getFilms","console","log","filterText","setFilterText","filmsList","setFilmsList","selectedFilm","setSelectedFilm","filteredList","filter","item","name","toLowerCase","indexOf","handleChange","val","unique","target","value","filmsData","find","ele","url","onFilmSelect","e","selectedFilms","title","length","map","release_date","split","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport './App.css';\nimport { GET_FILMS, GET_PEOPLE_LIST } from './actions';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst App = ({ loading, list, films, getTotalPeopleList, getFilms }) => {\n  console.log(list, '7::', films)\n  const [filterText, setFilterText] = useState('');\n  const [filmsList, setFilmsList] = useState(null);\n  const [selectedFilm, setSelectedFilm] = useState(null)\n  const filteredList = list.filter(item =>\n    ~item.name.toLowerCase().indexOf(filterText.toLowerCase())\n  );\n  useEffect(() => {\n    getTotalPeopleList();\n    getFilms()\n  }, []);\n  const handleChange = (val) => {\n    console.log(val, 'change====');\n    const unique = filteredList.filter((item) => item.name == val.target.value);\n    const filmsData = films.filter((value) => unique[0].films.find((ele) => ele == value.url));\n    setFilmsList(filmsData)\n  }\n  const onFilmSelect = (e) => {\n\n    const selectedFilms = films.filter((ele) => ele.title === e.target.value)\n    setSelectedFilm(selectedFilms)\n    console.log(e.target.value, '24::', selectedFilm);\n\n  }\n  return (\n    <div>\n      {filteredList.length >0&&\n      <div>\n\n\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value = {''}\n          onChange={handleChange}\n        >\n        {filteredList.map(item => (\n          <MenuItem value={item.value}> {item.name}</MenuItem>\n          ))}\n        </Select>\n        {/* <select onChange={handleChange} >\n          {filteredList.map(item => (\n            <option key={item.value} value={item.value}>\n              {item.name}\n            </option>\n          ))}\n        </select> */}\n      </div>\n}\n      {filmsList &&\n        <div>\n          <select onChange={onFilmSelect}  >\n            {filmsList.map(item => (\n              <option key={item.title} value={item.title}>\n                {item.title}\n              </option>\n            ))}\n          </select>\n        </div>\n      }\n\n      <div>\n        {selectedFilm && selectedFilm.map((val) =>\n          <p>{val.title} - {val.release_date.split('-')[0]}</p>\n        )\n\n        }\n\n      </div>\n    </div>\n\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log(state)\n  return {\n    loading: state.loading,\n    list: state.list,\n    films: state.films\n  }\n};\n\nconst mapDispatchToProps = {\n  getTotalPeopleList: GET_PEOPLE_LIST,\n  getFilms: GET_FILMS\n};\n\nexport { App };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n"]},"metadata":{},"sourceType":"module"}